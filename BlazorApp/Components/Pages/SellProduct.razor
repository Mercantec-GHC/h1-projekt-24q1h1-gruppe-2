@page "/SellProduct"
@using Npgsql
@using System.Drawing
@inject NavigationManager NavigationManager
@inject IWebHostEnvironment _hostingEnvironment
@inject List<Sound> allSounds
@inject List<Soundablegadget> AllSoundablegadgets
@using Domain_Models
 
<h1>Sell Your Vinyl Record Here!</h1>
<br />
 
<body>
    <div class="container">
        <div class="title">Register Your Product</div>
        <div class="content">
            <form action="#">
                <div class="user-details">
                    <div class="input-box">
                        <span class="details">Name</span>
                        <input type="text" @bind="Name" placeholder="Enter Title Here" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Condition</span>
                        <select id="condition" @bind="Condition" required>
                            <option value="mint">Mint</option>
                            <option value="excellent">Excellent</option>
                            <option value="veryGood">Very Good</option>
                            <option value="good">Good</option>
                            <option value="fairPoor">Fair/Poor</option>
                        </select>
                    </div>
                    <div class="input-box">
                        <span class="details">Genre</span>
                        <input type="text" @bind="Genre" placeholder="Genre" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Year</span>
                        <select id="year" @bind="Year" placeholder="Published" required>
                            <option value="">Year</option>
                            @for (int year = 1920; year <= DateTime.Now.Year; year++)
                            {
                                <option value="@year">@year</option>
                            }
                            </select>
                    </div>
                    <div class="input-box">
                        <span class="details">Artist</span>
                        <input type="text" @bind="Artist" placeholder="Artist" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Album</span>
                        <input type="text" @bind="Album" placeholder="Album" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Tracks</span>
                        <input type="text" @bind="Tracks" placeholder="Tracks" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Speed</span>
                        <input type="text" @bind="Speed" placeholder="In revolutions per minute (rpm)" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Size</span>
                        <input type="text" @bind="Size" placeholder="In Inches (7-10-12..)" required>
                    </div>
                    <div class="input-box">
                        <span class="details">Price</span>
                        <input type="text" @bind="Price" placeholder="Full Price" required>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(ErrorMessage))
                    {
                        <p style="color: red; text-align: center; font-size: 14;">@ErrorMessage</p>
                    }
                <div class="button">
                    <input type="submit" @onclick="Submit" value="Register">
                </div>
            </form>
        </div>
    </div>
</body>


@code {
    private string? ErrorMessage { get; set; } = "";
    public string? Name { get; set; }
    public string? Condition { get; set; }
    public string? Speed { get; set; }
    public string? Tracks { get; set; }
    public string? Size { get; set; }
    public int? Year { get; set; }
    public int? Price { get; set; }
    public string? Genre { get; set; }
    public string? Album { get; set; }
    public string? Artist { get; set; }



    public void Submit()
    {
        ErrorMessage = "";

        if (string.IsNullOrEmpty(Name) || string.IsNullOrEmpty(Condition) || string.IsNullOrEmpty(Speed) ||
         string.IsNullOrEmpty(Tracks) || string.IsNullOrEmpty(Size) || !Year.HasValue || !Price.HasValue ||
        string.IsNullOrEmpty(Genre) || string.IsNullOrEmpty(Album) || string.IsNullOrEmpty(Artist))
        {
            ErrorMessage = "Couldn't create product, details are missing";
            return;
        }
        else
        {
        string connectionString = "Host=ep-icy-king-a5d5u7sc.us-east-2.aws.neon.tech;Username=neondb_owner;Password=wzWv76MaoNOA;Database=neondb;sslmode=require";
        using var connection = new NpgsqlConnection(connectionString);
        connection.Open();
        using (var cmd = new NpgsqlCommand())
        {
            cmd.Connection = connection;

            cmd.CommandText = @"
            INSERT INTO sounds(Name, Artist, Condition, Speed, Size, Year, Price, Genre, Album, Tracks)
            VALUES(@Name, @Artist, @Condition, @Speed, @Size, @Year, @Price, @Genre, @Album, @Tracks);";

            cmd.Parameters.AddWithValue("Name", Name ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Artist", Artist ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Condition", Condition ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Speed", Speed ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Size", Size ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Year", Year);
            cmd.Parameters.AddWithValue("Price", Price);
            cmd.Parameters.AddWithValue("Genre", Genre ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Album", Album ?? (object)DBNull.Value);
            cmd.Parameters.AddWithValue("Tracks", Tracks ?? (object)DBNull.Value);






            cmd.ExecuteNonQuery();
        }
        NavigationManager.NavigateTo("/vinyl");
    }
}
}




